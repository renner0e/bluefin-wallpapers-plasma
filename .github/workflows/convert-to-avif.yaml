---
name: Bluefin Wallpapers to Plasma
on:
  push:
  pull_request:
    paths-ignore:
    - README.md
  schedule:
    - cron: '0 6 1 * *' # At 06:00 AM UTC on the first of each month
  workflow_dispatch:

jobs:
  convert-release:
    name: Convert all Bluefin Wallpapers to Plasma AVIFs
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # We need a newish version of kimageformats, 24.04 doesn't have it
    container: docker.io/library/ubuntu:25.04

    steps:

      - name: Install dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt update
          apt -y install git plasma-wallpaper-dynamic kimageformat-plugins

      - name: Download wallpapers
        run: |
          set -eoux pipefail
          git clone --depth 1 https://github.com/ublue-os/packages.git
          cp packages/packages/bluefin/wallpapers/images/[0-9][0-9]-bluefin-*.jxl .

      - name: Create Manifests
        shell: bash
        run: |
          set -eoux pipefail
          find packages/packages/bluefin/wallpapers/images/ -name '[0-9][0-9]-bluefin-night.jxl' | sort | while read -r night_file; do
              day_file="${night_file/night/day}"

              if [[ -f "$day_file" ]]; then
                  filename=$(basename "$night_file")
                  NUM="${filename%%-*}"

                  echo "Wallpaper: $NUM"
                  echo "Day:   $day_file"
                  echo "Night: $night_file"

                  manifest="${NUM}-bluefin.json"
            cat > $manifest << EOF
          {
            "Type": "day-night",
            "Meta": [
              {
                "TimeOfDay": "day",
                "FileName": "${NUM}-bluefin-day.jxl"
              },
              {
                "TimeOfDay": "night",
                "FileName": "${NUM}-bluefin-night.jxl"
              }
            ]
          }
          EOF
                  mkdir -p output
                  kdynamicwallpaperbuilder --speed 8 $manifest --output output/${NUM}-bluefin.avif
              fi
          done

      - name: Create tarball
        shell: bash
        run: |
          cd output && tar -czvf wallpapers.tar.gz *.avif

      - name: Determine tag
        id: tag
        run: echo "tag=v$(date --iso-8601=date)" >> "$GITHUB_OUTPUT"

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          tag:   ${{ steps.tag.outputs.tag }}
          allowUpdates: true
          name:  "Automated build ${{ steps.tag.outputs.tag }}"
          artifacts: "output/*.avif,output/wallpapers.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}

